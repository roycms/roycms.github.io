<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Google开源新算法，可将JPEG文件缩小35%]]></title>
      <url>https://www.19860911.cn/2017/03/29/Google%E5%BC%80%E6%BA%90%E6%96%B0%E7%AE%97%E6%B3%95%EF%BC%8C%E5%8F%AF%E5%B0%86JPEG%E6%96%87%E4%BB%B6%E7%BC%A9%E5%B0%8F35/</url>
      <content type="html"><![CDATA[<p><img src="https://server-19860911.oss-cn-beijing.aliyuncs.com/hexoResource/1490752297770/images/pasted-0.png" alt="upload successful"></p>
<p>作者｜ boxi<br>来源｜ 36Kr</p>
<p>近日，谷歌开发并开源了一种新的JPEG算法Guetzli，其可在图片质量不变的情况下，将文件大小降低35%。与WebP和WebM等其他图片压缩技术不同，谷歌的新JPEG技术完全兼容现有浏览器、设备、图片编辑应用和JPEG标准。本文经授权转载自36Kr。36Kr是中国最具影响力的互联网创投媒体，提供最新锐深度的商业报道。<br>一图胜千言。Web与过去冷冰冰的互联网最大的区别就在于多了丰富的图片。而web上面最流行的静态图片格式非JPEG莫属。JPEG文件的多寡往往会影响页面的加载速度。为此，Google开发了一种新的JPEG算法，可将文件大小减少35%，这无疑会提高网站的加载性能；此外新算法还可以在保持大小不变的情况下显著改善图片质量。更重要的是，Google的这种JPEG格式跟WebP、WebM等图像压缩办法不同，它可以完全与现有的浏览器、设备、图片编辑应用以及JPEG标准兼容。而且，Google还把它给开源出来了。</p>
<p>GitHub地址：<a href="https://github.com/google/guetzli/" target="_blank" rel="external">https://github.com/google/guetzli/</a></p>
<p>Google的这个新的JPEG编码器叫做Guetzli，由Google研究院苏黎世办公室领导开发。Guetzli在瑞士德语中是曲奇的意思，不过项目内容似乎跟曲奇并没有太大的关联，这也许是Google命名传统的延续，就像Android系统都是以糖果名称来命名那样。</p>
<p>一般而言，优化JPEG图片质量与大小有好几种手段，不过Guetzli聚焦的是量化阶段的压缩。简而言之，量化就是把大量难以压缩的无序数据缩减为易于压缩的有序数据的过程。在JPEG的编码中，这一过程往往是通过将渐变的颜色简化为色块而把小的细节完全抹除掉。<br>不过这个过程的困难之处在于，要在抹除细节与缩小文件大小之间找到平衡。每一种有损编码器（比如libjpeg、x264、lame）的做法都不一样。</p>
<p>而Guetzli的做法是利用一种新的精神性视觉模型（基于人类的视觉处理系统）来确定应该保留和丢弃哪些颜色和细节，它的名字叫做Butteraugli。Butteraugli的具体细节淹没在一堆高精度的常量之中，这些常量可以生成一个“近似于颜色感知和视觉”的模型，而且比其他的编码器更加透彻和详细。</p>
<p>至于Google研究院是如何发现这些常量的就不得而知了。不过似乎是计算机生成的，或者至少是经过计算机优化的。之前Google曾经推出过一款可以将有码变成无码的AI软件，它可以利用两种神经网络从已知的图片中寻找与待补充细节匹配的新像素，并将添加进去。也许给神经网络提供足够丰富的图像语料库的话，AI就能概括出这种精神性视觉模型？</p>
<p><img src="https://server-19860911.oss-cn-beijing.aliyuncs.com/hexoResource/1490752350868/images/pasted-0.png" alt="upload successful"></p>
<p>编码器对比：左为原图，中为libjpeg的处理，右为Guetzli。</p>
<p><img src="https://server-19860911.oss-cn-beijing.aliyuncs.com/hexoResource/1490752415452/images/pasted-0.png" alt="upload successful"></p>
<p>左为原图，中为libjpeg的处理，右为Guetzli。</p>
<p>虽然Guetzli的主要用途是减少文件大小，但Google研究院认为该编码器也可以在保持大小不变的同时用来提高JPEG可感知的画质。在于另一款流行的开源编码器libjpeg进行对比时，Google称“75%的打分更偏好Guetzli。这意味着Butteraugli的精神性视觉图像类似性指标在高画质方面接近于人类感知。</p>
<p>不管是减少大小还是提高质量，Guetzli的开源对于JPEG这款高度流行的图片格式的作用都是深远的。不过，Google要实现这些效果也不是说没有任何代价，跟libjpeg相比，其编码需要的时间还是要多一些。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[写作也是工作的一种能力]]></title>
      <url>https://www.19860911.cn/2017/03/28/%E5%86%99%E4%BD%9C%E4%B9%9F%E6%98%AF%E5%B7%A5%E4%BD%9C%E7%9A%84%E4%B8%80%E7%A7%8D%E8%83%BD%E5%8A%9B/</url>
      <content type="html"><![CDATA[<p>写作作为一种技能，在现代社会分工明细的环境下，这种能力哟喂</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[书有可浅尝者，有可吞食者，少数则须咀嚼消化]]></title>
      <url>https://www.19860911.cn/2017/03/28/%E6%AC%A3%E8%B5%8F%E4%B8%80%E4%B8%8B%E5%A3%81%E7%BA%B8/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Some books are to be tasted, others to be swallowed, and some few to be chewed and digested; that is, some books are to be read only in parts; others to be read, but not curiously; and some few to be read wholly, and with diligence and attention. 书有可浅尝者，有可吞食者，少数则须咀嚼消化。换言之，有只须读其部分者，有只须大体涉猎者，少数则须全读，读时须全神贯注，孜孜不倦。   —培根《论读书》</p>
</blockquote>
<p><img src="https://server-19860911.oss-cn-beijing.aliyuncs.com/hexoResource/1490692802051/images/pasted-0.png" alt="upload successful"></p>
<p><img src="https://server-19860911.oss-cn-beijing.aliyuncs.com/hexoResource/1490692811098/images/pasted-0.png" alt="upload successful"></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[奥森公园]]></title>
      <url>https://www.19860911.cn/2017/03/27/%E5%A5%A5%E6%A3%AE%E5%85%AC%E5%9B%AD/</url>
      <content type="html"><![CDATA[<p><img src="https://server-19860911.oss-cn-beijing.aliyuncs.com/hexoResource/1490576625996/images/pasted-0.png" alt="upload successful"></p>
<p><img src="https://server-19860911.oss-cn-beijing.aliyuncs.com/hexoResource/1490576662483/images/pasted-0.png" alt="upload successful"></p>
<p><img src="https://server-19860911.oss-cn-beijing.aliyuncs.com/hexoResource/1490576823898/images/pasted-0.png" alt="upload successful"></p>
<p><img src="https://server-19860911.oss-cn-beijing.aliyuncs.com/hexoResource/1490576880414/images/pasted-0.png" alt="upload successful"></p>
]]></content>
      
        <categories>
            
            <category> photo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> photo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[梦的解析]]></title>
      <url>https://www.19860911.cn/2017/03/26/%E6%A2%A6%E7%9A%84%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<p>晚上闲来无事，翻阅《梦的解析》，这本书放在书架的最上方曾经读了很多遍，每次做稀奇古怪的梦都会去检索书里潜意识的分析，弗洛伊德…</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo!  Hello World]]></title>
      <url>https://www.19860911.cn/2017/03/26/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[gulp前端构建工具讲义]]></title>
      <url>https://www.19860911.cn/2017/03/26/gulp/</url>
      <content type="html"><![CDATA[<p><img src="https://server-19860911.oss-cn-beijing.aliyuncs.com/hexoResource/1490536620665/images/pasted-0.png" alt="upload successful"></p>
<blockquote>
<p>在公司受邀给前端讲gulp，对于我这IOS开发来说，已经许久没有用前端的东西了，在讲之前还是做一个简单的课件准备一下，顺便拿出来分享，供大家翻阅。</p>
</blockquote>
<h2 id="什么是构建系统？"><a href="#什么是构建系统？" class="headerlink" title="什么是构建系统？"></a>什么是构建系统？</h2><p>构建系统(build system)是用来从源代码生成用户可以使用的目标(targets)的自动化工具。<br>自动化工具。</p>
<h2 id="前端有哪些构建需求？"><a href="#前端有哪些构建需求？" class="headerlink" title="前端有哪些构建需求？"></a>前端有哪些构建需求？</h2><ul>
<li><p>预处理</p>
<pre><code>SASS LESS CoffeeScript Babel 等预处理 ECMA Script6 的兼容标准
</code></pre></li>
<li><p>风格与测试</p>
<pre><code>代码风格检测，单元测试
</code></pre></li>
<li><p>资源压缩</p>
<pre><code>CSS JS 文件合并压缩  -webkit- -moz- 前缀兼容性处理
</code></pre></li>
<li><p>静态资源的替换</p>
<pre><code>开发—&gt;生产环境 需要更换URL地址以及CDN地址切换等自动化任务
</code></pre></li>
</ul>
<h2 id="前端那些构建工具？"><a href="#前端那些构建工具？" class="headerlink" title="前端那些构建工具？"></a>前端那些构建工具？</h2><ul>
<li>任务管理工具 Gulp, Grunt</li>
<li>打包工具 webpack, FIS</li>
<li>构建工具  Make</li>
</ul>
<h2 id="Gulp和Grunt-区别是什么？"><a href="#Gulp和Grunt-区别是什么？" class="headerlink" title="Gulp和Grunt 区别是什么？"></a>Gulp和Grunt 区别是什么？</h2><p>Gulp 对文件的处理采用流式读取。</p>
<h2 id="Gulp-常用插件讲解"><a href="#Gulp-常用插件讲解" class="headerlink" title="Gulp 常用插件讲解"></a>Gulp 常用插件讲解</h2><ul>
<li>gulp-uglify （JS压缩）</li>
<li>gulp-minify-css（CSS压缩） </li>
<li>gulp-minify-html（html压缩） </li>
<li>gulp-jshint（JS代码检查） </li>
<li>gulp-concat（文件合并） </li>
<li>gulp-less（编译Less） </li>
<li>gulp-sass（编译Sass） </li>
<li>gulp-imagemin（压缩图片） </li>
<li>gulp-livereload（自动刷新） </li>
</ul>
<h2 id="Gulp-文档资源地址及拓展阅读"><a href="#Gulp-文档资源地址及拓展阅读" class="headerlink" title="Gulp 文档资源地址及拓展阅读"></a>Gulp 文档资源地址及拓展阅读</h2><ul>
<li>gulp 安装 <a href="install.html">link</a></li>
<li>gulp 官方网站 <a href="http://gulpjs.com/" target="_blank" rel="external">link</a></li>
<li>gulp 插件资源地址 <a href="http://gulpjs.com/plugins/" target="_blank" rel="external">link</a></li>
<li>gulp 中文站点  <a href="http://www.gulpjs.com.cn/" target="_blank" rel="external">link</a>   </li>
<li><a href="http://www.w3ctech.com/topic/134" target="_blank" rel="external">http://www.w3ctech.com/topic/134</a>   </li>
<li><a href="http://stackoverflow.com/questions/26719884/gulp-minify-multiple-js-files-to-one" target="_blank" rel="external">http://stackoverflow.com/questions/26719884/gulp-minify-multiple-js-files-to-one</a>   </li>
<li><a href="https://www.npmjs.com/package/gulp-minify-html" target="_blank" rel="external">https://www.npmjs.com/package/gulp-minify-html</a>   </li>
<li><a href="https://www.npmjs.com/package/gulp-minify-css" target="_blank" rel="external">https://www.npmjs.com/package/gulp-minify-css</a>     </li>
<li><a href="http://ju.outofmemory.cn/entry/140033" target="_blank" rel="external">http://ju.outofmemory.cn/entry/140033</a>   </li>
<li><a href="http://www.techug.com/gulp" target="_blank" rel="external">http://www.techug.com/gulp</a>   </li>
<li><a href="http://www.gulpjs.com.cn/docs/writing-a-plugin/中文官网" target="_blank" rel="external">http://www.gulpjs.com.cn/docs/writing-a-plugin/中文官网</a> </li>
<li><a href="https://www.npmjs.com/package/gulp-inject-string" target="_blank" rel="external">https://www.npmjs.com/package/gulp-inject-string</a>   </li>
<li><a href="https://github.com/stevelacy/gulp-git" target="_blank" rel="external">https://github.com/stevelacy/gulp-git</a>   </li>
<li><a href="http://www.cnblogs.com/2050/p/4198792.html" target="_blank" rel="external">http://www.cnblogs.com/2050/p/4198792.html</a>        </li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> gulp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo image 用阿里云存储]]></title>
      <url>https://www.19860911.cn/2017/03/26/hexo-image-%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91%E5%AD%98%E5%82%A8/</url>
      <content type="html"><![CDATA[<h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>安装 hexo-admin,co,ali-oss<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd 项目目录</div><div class="line">npm install hexo-admin </div><div class="line">npm install co</div><div class="line">npm install ali-oss</div></pre></td></tr></table></figure></p>
<h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>open /node_modules/hexo-admin/api.js 在头部加入代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var co = require(&apos;co&apos;)</div><div class="line">var oss = require(&apos;ali-oss&apos;)</div></pre></td></tr></table></figure></p>
<p>在 module.exports 内初始化阿里云<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">module.exports = function (app, hexo) &#123;</div><div class="line"></div><div class="line">  //初始化阿里云</div><div class="line">  var client = new oss(&#123;</div><div class="line">    region: &apos;你的region&apos;,</div><div class="line">    accessKeyId: &apos;你的accessKeyId&apos;,</div><div class="line">    accessKeySecret: &apos;你的accessKeySecret&apos;</div><div class="line">  &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在 400 行代码处找到如下代码 注释掉或者删除<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">hexo.log.d(`saving image to $&#123;outpath&#125;`)</div><div class="line">fs.writeFile(outpath, buf, function (err) &#123;</div><div class="line">  if (err) &#123;</div><div class="line">    console.log(err)</div><div class="line">  &#125;</div><div class="line">  hexo.source.process().then(function () &#123;</div><div class="line">    res.done(&#123;</div><div class="line">      src: path.join(hexo.config.root + filename),</div><div class="line">      msg: msg</div><div class="line">    &#125;)</div><div class="line">  &#125;);</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>在400行处添加代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">var objectKey = &quot;hexoResource/&quot; + Date.now() + filename</div><div class="line"></div><div class="line">  co(function* () &#123;</div><div class="line">    client.useBucket(&apos;server-19860911&apos;);</div><div class="line">    var result = yield client.put(objectKey, buf);</div><div class="line">    // console.log(&quot;|||||||||||||=======&quot;+result);</div><div class="line">    var returnFileName = &quot;https://server-19860911.oss-cn-beijing.aliyuncs.com/&quot; + objectKey</div><div class="line">    hexo.source.process().then(function () &#123;</div><div class="line">      res.done(&#123;</div><div class="line">        src: returnFileName,</div><div class="line">        msg: msg</div><div class="line">      &#125;)</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">  &#125;).catch(function (err) &#123;</div><div class="line">    console.log(&quot;|||||||||||||&quot;+err);</div><div class="line">  &#125;);</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为什么开这个blog]]></title>
      <url>https://www.19860911.cn/2017/03/25/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E8%BF%99%E4%B8%AAblog/</url>
      <content type="html"><![CDATA[<p>依稀记得写博客是刚入大学的时候，学习编程总结一些技术性文章发表到blog上,用的是博客园，后来为blog搬了几次家记不清楚了。</p>
<p>用过博客园，轻博客，点点客，简书，对待博客算是个喜新厌旧始乱终弃的主了，总是不知疲倦的探索更优雅的写blog姿势。</p>
<p>忙乎了2个小时总算是把这个姿势给摆好了，开写了，我总归不是一个怀旧的人，摆好了姿势也就不情愿把以前的内容搬家过来了，也可以说是懒吧！</p>
<p>扯了这么多还是没说清楚为什么要开这个blog，就这样吧！写点文字，贴点自己喜欢的照片。</p>
<p><img src="https://server-19860911.oss-cn-beijing.aliyuncs.com/hexoResource/1490527661755/images/pasted-0.png" alt="upload successful"></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> blog </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
